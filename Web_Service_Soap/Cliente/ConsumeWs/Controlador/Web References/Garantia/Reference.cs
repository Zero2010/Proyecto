//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Controlador.Garantia {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="reggarantiaSoap", Namespace="localhost")]
    public partial class reggarantia : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RegistroGarantiaOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public reggarantia() {
            this.Url = global::Controlador.Properties.Settings.Default.Controlador_garantia_reggarantia;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RegistroGarantiaCompletedEventHandler RegistroGarantiaCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("localhost/RegistroGarantia", RequestNamespace="localhost", ResponseNamespace="localhost", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] RegistroGarantia(
                    string codigo_dealer, 
                    string codigo_sucursal, 
                    string nombre_usuario, 
                    string fech_entre_vehi, 
                    string rut_asua_final, 
                    string nom_usua_final, 
                    string nom2_usua_final, 
                    string apep_usua_final, 
                    string apem_usua_final, 
                    string dire_usua_final, 
                    string comu_usua_final, 
                    string ciud_usua_final, 
                    string tel_part_ufinal, 
                    string tel_come_ufinal, 
                    string tel_celu_ufinal, 
                    string mail_usua_final, 
                    string sexo_usua_final, 
                    string fech_nac_ufinal, 
                    string tipo_usuario, 
                    string num_stock, 
                    string fecha_factura, 
                    string rut_vendedor, 
                    string usua_regist_venta, 
                    string numero_factura, 
                    string nombre_cliente, 
                    string rut_cliente, 
                    string contr_seguro, 
                    string contr_credito, 
                    string num_poliza, 
                    string inst_seguro, 
                    string inst_credito, 
                    string usuario, 
                    string password) {
            object[] results = this.Invoke("RegistroGarantia", new object[] {
                        codigo_dealer,
                        codigo_sucursal,
                        nombre_usuario,
                        fech_entre_vehi,
                        rut_asua_final,
                        nom_usua_final,
                        nom2_usua_final,
                        apep_usua_final,
                        apem_usua_final,
                        dire_usua_final,
                        comu_usua_final,
                        ciud_usua_final,
                        tel_part_ufinal,
                        tel_come_ufinal,
                        tel_celu_ufinal,
                        mail_usua_final,
                        sexo_usua_final,
                        fech_nac_ufinal,
                        tipo_usuario,
                        num_stock,
                        fecha_factura,
                        rut_vendedor,
                        usua_regist_venta,
                        numero_factura,
                        nombre_cliente,
                        rut_cliente,
                        contr_seguro,
                        contr_credito,
                        num_poliza,
                        inst_seguro,
                        inst_credito,
                        usuario,
                        password});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void RegistroGarantiaAsync(
                    string codigo_dealer, 
                    string codigo_sucursal, 
                    string nombre_usuario, 
                    string fech_entre_vehi, 
                    string rut_asua_final, 
                    string nom_usua_final, 
                    string nom2_usua_final, 
                    string apep_usua_final, 
                    string apem_usua_final, 
                    string dire_usua_final, 
                    string comu_usua_final, 
                    string ciud_usua_final, 
                    string tel_part_ufinal, 
                    string tel_come_ufinal, 
                    string tel_celu_ufinal, 
                    string mail_usua_final, 
                    string sexo_usua_final, 
                    string fech_nac_ufinal, 
                    string tipo_usuario, 
                    string num_stock, 
                    string fecha_factura, 
                    string rut_vendedor, 
                    string usua_regist_venta, 
                    string numero_factura, 
                    string nombre_cliente, 
                    string rut_cliente, 
                    string contr_seguro, 
                    string contr_credito, 
                    string num_poliza, 
                    string inst_seguro, 
                    string inst_credito, 
                    string usuario, 
                    string password) {
            this.RegistroGarantiaAsync(codigo_dealer, codigo_sucursal, nombre_usuario, fech_entre_vehi, rut_asua_final, nom_usua_final, nom2_usua_final, apep_usua_final, apem_usua_final, dire_usua_final, comu_usua_final, ciud_usua_final, tel_part_ufinal, tel_come_ufinal, tel_celu_ufinal, mail_usua_final, sexo_usua_final, fech_nac_ufinal, tipo_usuario, num_stock, fecha_factura, rut_vendedor, usua_regist_venta, numero_factura, nombre_cliente, rut_cliente, contr_seguro, contr_credito, num_poliza, inst_seguro, inst_credito, usuario, password, null);
        }
        
        /// <remarks/>
        public void RegistroGarantiaAsync(
                    string codigo_dealer, 
                    string codigo_sucursal, 
                    string nombre_usuario, 
                    string fech_entre_vehi, 
                    string rut_asua_final, 
                    string nom_usua_final, 
                    string nom2_usua_final, 
                    string apep_usua_final, 
                    string apem_usua_final, 
                    string dire_usua_final, 
                    string comu_usua_final, 
                    string ciud_usua_final, 
                    string tel_part_ufinal, 
                    string tel_come_ufinal, 
                    string tel_celu_ufinal, 
                    string mail_usua_final, 
                    string sexo_usua_final, 
                    string fech_nac_ufinal, 
                    string tipo_usuario, 
                    string num_stock, 
                    string fecha_factura, 
                    string rut_vendedor, 
                    string usua_regist_venta, 
                    string numero_factura, 
                    string nombre_cliente, 
                    string rut_cliente, 
                    string contr_seguro, 
                    string contr_credito, 
                    string num_poliza, 
                    string inst_seguro, 
                    string inst_credito, 
                    string usuario, 
                    string password, 
                    object userState) {
            if ((this.RegistroGarantiaOperationCompleted == null)) {
                this.RegistroGarantiaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegistroGarantiaOperationCompleted);
            }
            this.InvokeAsync("RegistroGarantia", new object[] {
                        codigo_dealer,
                        codigo_sucursal,
                        nombre_usuario,
                        fech_entre_vehi,
                        rut_asua_final,
                        nom_usua_final,
                        nom2_usua_final,
                        apep_usua_final,
                        apem_usua_final,
                        dire_usua_final,
                        comu_usua_final,
                        ciud_usua_final,
                        tel_part_ufinal,
                        tel_come_ufinal,
                        tel_celu_ufinal,
                        mail_usua_final,
                        sexo_usua_final,
                        fech_nac_ufinal,
                        tipo_usuario,
                        num_stock,
                        fecha_factura,
                        rut_vendedor,
                        usua_regist_venta,
                        numero_factura,
                        nombre_cliente,
                        rut_cliente,
                        contr_seguro,
                        contr_credito,
                        num_poliza,
                        inst_seguro,
                        inst_credito,
                        usuario,
                        password}, this.RegistroGarantiaOperationCompleted, userState);
        }
        
        private void OnRegistroGarantiaOperationCompleted(object arg) {
            if ((this.RegistroGarantiaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegistroGarantiaCompleted(this, new RegistroGarantiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void RegistroGarantiaCompletedEventHandler(object sender, RegistroGarantiaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegistroGarantiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegistroGarantiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591